[
  {
    "objectID": "Practical One.html",
    "href": "Practical One.html",
    "title": "Practical One",
    "section": "",
    "text": "2.1 Question 1\nairquality_missing &lt;- airquality[!complete.cases(airquality),]\nairquality_missing\n\n    Ozone Solar.R Wind Temp Month Day\n5      NA      NA 14.3   56     5   5\n6      28      NA 14.9   66     5   6\n10     NA     194  8.6   69     5  10\n11      7      NA  6.9   74     5  11\n25     NA      66 16.6   57     5  25\n26     NA     266 14.9   58     5  26\n27     NA      NA  8.0   57     5  27\n32     NA     286  8.6   78     6   1\n33     NA     287  9.7   74     6   2\n34     NA     242 16.1   67     6   3\n35     NA     186  9.2   84     6   4\n36     NA     220  8.6   85     6   5\n37     NA     264 14.3   79     6   6\n39     NA     273  6.9   87     6   8\n42     NA     259 10.9   93     6  11\n43     NA     250  9.2   92     6  12\n45     NA     332 13.8   80     6  14\n46     NA     322 11.5   79     6  15\n52     NA     150  6.3   77     6  21\n53     NA      59  1.7   76     6  22\n54     NA      91  4.6   76     6  23\n55     NA     250  6.3   76     6  24\n56     NA     135  8.0   75     6  25\n57     NA     127  8.0   78     6  26\n58     NA      47 10.3   73     6  27\n59     NA      98 11.5   80     6  28\n60     NA      31 14.9   77     6  29\n61     NA     138  8.0   83     6  30\n65     NA     101 10.9   84     7   4\n72     NA     139  8.6   82     7  11\n75     NA     291 14.9   91     7  14\n83     NA     258  9.7   81     7  22\n84     NA     295 11.5   82     7  23\n96     78      NA  6.9   86     8   4\n97     35      NA  7.4   85     8   5\n98     66      NA  4.6   87     8   6\n102    NA     222  8.6   92     8  10\n103    NA     137 11.5   86     8  11\n107    NA      64 11.5   79     8  15\n115    NA     255 12.6   75     8  23\n119    NA     153  5.7   88     8  27\n150    NA     145 13.2   77     9  27",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Practical One.html#question-2",
    "href": "Practical One.html#question-2",
    "title": "Practical One",
    "section": "2.2 Question 2",
    "text": "2.2 Question 2\n\nmean_tmp_ozone &lt;- mean(airquality$Ozone, na.rm = TRUE)\nmean_tmp_ozone\n\n[1] 42.12931\n\n\n\nmean_tmp_temp &lt;- mean(airquality$Temp, na.rm = TRUE)\nmean_tmp_temp\n\n[1] 77.88235\n\n\n\nsd_tmp_ozone &lt;- sd(airquality$Ozone, na.rm = TRUE)\nsd_tmp_ozone\n\n[1] 32.98788\n\n\n\nsd_tmp_temp &lt;- sd(airquality$Temp, na.rm = TRUE)\nsd_tmp_temp\n\n[1] 9.46527\n\n\n\nmin_tmp_ozone &lt;- min(airquality$Ozone, na.rm = TRUE)\nmin_tmp_ozone\n\n[1] 1\n\n\n\nmin_tmp_temp &lt;- min(airquality$Temp, na.rm = TRUE)\nmin_tmp_temp\n\n[1] 56\n\n\n\nmax_tmp_ozone &lt;- max(airquality$Ozone, na.rm = TRUE)\nmax_tmp_ozone\n\n[1] 168\n\n\n\nmax_tmp_temp &lt;- max(airquality$Temp, na.rm = TRUE)\nmax_tmp_temp\n\n[1] 97",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Practical One.html#question-3",
    "href": "Practical One.html#question-3",
    "title": "Practical One",
    "section": "2.3 Question 3",
    "text": "2.3 Question 3\n\ndf &lt;- cars\nx_matrix &lt;- matrix(df$speed)\ny_matrix &lt;- matrix(df$dist)\n\nlin_reg &lt;- function(x,y){\n  x_mat &lt;- cbind(1,x)\n  beta &lt;- solve(t(x_mat)%*%(x_mat))%*%t(x_mat)%*%y #estimated coefficients\n  \n  residuals &lt;- y - x_mat %*% beta #residuals\n  \n  MSE &lt;- (t(residuals)%*%residuals)/(length(y)-2) #mean squared errors\n  MSE &lt;- sum(MSE)\n  \n  var_beta &lt;- MSE * solve(t(x_mat)%*%x_mat)\n  \n  se &lt;- diag(sqrt(var_beta)) #standard error\n  \n  t_val &lt;- beta/se #t statistics\n\n  p_val &lt;- 2*(1-pt(abs(t_val), df = length(y)-2)) #p value\n  \n  return(list('coefficients' = beta, 'std error' = se, 't statistic' = t_val, 'p-value' = p_val))\n}\nlin_reg(x_matrix,y_matrix)\n\nWarning in sqrt(var_beta): NaNs produced\n\n\n$coefficients\n           [,1]\n[1,] -17.579095\n[2,]   3.932409\n\n$`std error`\n[1] 6.7584402 0.4155128\n\n$`t statistic`\n          [,1]\n[1,] -2.601058\n[2,]  9.463990\n\n$`p-value`\n             [,1]\n[1,] 1.231882e-02\n[2,] 1.489919e-12",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Practical One.html#question-4",
    "href": "Practical One.html#question-4",
    "title": "Practical One",
    "section": "2.4 Question 4",
    "text": "2.4 Question 4\n\ndf &lt;- cars\nmodel &lt;- lm(df$dist ~ df$speed, data = df)\nsummary(model)\n\n\nCall:\nlm(formula = df$dist ~ df$speed, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \ndf$speed      3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,    Adjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Practical One</span>"
    ]
  },
  {
    "objectID": "Practical Two.html",
    "href": "Practical Two.html",
    "title": "3  Practical Two",
    "section": "",
    "text": "3.1 Custom LOWESS function output\n# generating data\nset.seed(1)\nx &lt;- 1:100\ne_term &lt;- rnorm(100,0,0.2^(2))\ny &lt;- sin(x/100) + e_term\n\n# calculating weights\n  \n\n\n# custom function to implement the LOWESS algorithm\n\ncustomLowess &lt;- function(x, y, f){\n  \n  # calculating span\n  n &lt;- length(x)\n  k &lt;- ceiling(f*n)\n  y_pred &lt;- numeric(n) # initializing vector\n  \n  for (i in 1:100) {\n  # computing distances\n    distances &lt;- abs(x-x[i])\n  \n  # selecting neighbours\n    nhbr_ind &lt;- order(distances)[1:k]\n    x_nhbr &lt;- x[nhbr_ind]\n    y_nhbr &lt;- y[nhbr_ind]\n    \n  # computing the weights\n    d_max &lt;- max(distances[nhbr_ind])\n    weights &lt;- (1-(distances[nhbr_ind]/d_max)^3)^3\n    weights[distances[nhbr_ind]&gt;=d_max]&lt;-0\n    \n  # performing weighted linear regression \n    X &lt;- cbind(1, x_nhbr)\n    W &lt;- diag(weights)\n    beta &lt;- solve(t(X) %*% W %*% X) %*% (t(X) %*% W %*% y_nhbr)\n    \n    y_pred[i] &lt;- beta[1] + beta[2] * x[i]\n  }\n  return(y_pred)\n}\n\nmodel_custom &lt;-customLowess(x,y,f=1/10) # f is a hyper parameter\nmodel_custom\n\n  [1] -0.00115125  0.01417820  0.02898056  0.04347000  0.05852993  0.07205459\n  [7]  0.08271226  0.09351996  0.10642162  0.11529665  0.11689574  0.12033173\n [13]  0.12723186  0.13505912  0.14464459  0.16071266  0.18097329  0.19971591\n [19]  0.21340607  0.22281686  0.22613383  0.22790102  0.23135291  0.23454823\n [25]  0.23544511  0.23978976  0.25202817  0.26882474  0.28259071  0.29606199\n [31]  0.30969775  0.31995096  0.32481211  0.32694644  0.33155516  0.34223746\n [37]  0.35659762  0.37179718  0.38653078  0.40028200  0.41180839  0.41776018\n [43]  0.42018405  0.42621608  0.43661851  0.44675234  0.45686317  0.46867936\n [49]  0.48054103  0.48911677  0.49419352  0.50274629  0.51557199  0.52593250\n [55]  0.53335034  0.54208150  0.55265332  0.56436297  0.57193943  0.58019854\n [61]  0.59104493  0.59964063  0.60231263  0.60082270  0.60188530  0.61010491\n [67]  0.62448122  0.63960641  0.65264764  0.66306207  0.66851093  0.66645187\n [73]  0.66344235  0.66285618  0.66754787  0.67531517  0.68319767  0.69205550\n [79]  0.70149499  0.71051603  0.71748650  0.72471049  0.73495194  0.74798344\n [85]  0.75829459  0.76608828  0.77351981  0.78148284  0.78872758  0.79722193\n [91]  0.80768063  0.82017396  0.83030340  0.83448809  0.83276011  0.82609094\n [97]  0.81864062  0.81074026  0.80265137  0.79496324",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practical Two</span>"
    ]
  },
  {
    "objectID": "Practical Two.html#r-lowess-function-output",
    "href": "Practical Two.html#r-lowess-function-output",
    "title": "3  Practical Two",
    "section": "3.2 R LOWESS function output",
    "text": "3.2 R LOWESS function output\n\n# comparison with built-in R LOWESS function\n\nmodel_R &lt;- lowess(x,y,f=1/10,iter = 0)\nmodel_R\n\n$x\n  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18\n [19]  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36\n [37]  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54\n [55]  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72\n [73]  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90\n [91]  91  92  93  94  95  96  97  98  99 100\n\n$y\n  [1] -0.00115125  0.01417820  0.02898056  0.04347000  0.05852993  0.07205459\n  [7]  0.08271226  0.09351996  0.10642162  0.11529665  0.11689574  0.12033173\n [13]  0.12723186  0.13505912  0.14464459  0.16071266  0.18097329  0.19971591\n [19]  0.21340607  0.22281686  0.22613383  0.22790102  0.23135291  0.23454823\n [25]  0.23544511  0.23978976  0.25202817  0.26882474  0.28259071  0.29606199\n [31]  0.30969775  0.31995096  0.32481211  0.32694644  0.33155516  0.34223746\n [37]  0.35659762  0.37179718  0.38653078  0.40028200  0.41180839  0.41776018\n [43]  0.42018405  0.42621608  0.43661851  0.44675234  0.45686317  0.46867936\n [49]  0.48054103  0.48911677  0.49419352  0.50274629  0.51557199  0.52593250\n [55]  0.53335034  0.54208150  0.55265332  0.56436297  0.57193943  0.58019854\n [61]  0.59104493  0.59964063  0.60231263  0.60082270  0.60188530  0.61010491\n [67]  0.62448122  0.63960641  0.65264764  0.66306207  0.66851093  0.66645187\n [73]  0.66344235  0.66285618  0.66754787  0.67531517  0.68319767  0.69205550\n [79]  0.70149499  0.71051603  0.71748650  0.72471049  0.73495194  0.74798344\n [85]  0.75829459  0.76608828  0.77351981  0.78148284  0.78872758  0.79722193\n [91]  0.80768063  0.82017396  0.83030340  0.83448809  0.83276011  0.82609094\n [97]  0.81864062  0.81074026  0.80265137  0.79496324",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Practical Two</span>"
    ]
  },
  {
    "objectID": "Practical Four.html",
    "href": "Practical Four.html",
    "title": "4  Practical Four",
    "section": "",
    "text": "4.1 Question 1\nlibrary(UtilsDataRSV)\nlibrary(nycflights13)\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nhead(flights)\n\n# A tibble: 6 × 19\n   year month   day dep_time sched_dep_time dep_delay arr_time sched_arr_time\n  &lt;int&gt; &lt;int&gt; &lt;int&gt;    &lt;int&gt;          &lt;int&gt;     &lt;dbl&gt;    &lt;int&gt;          &lt;int&gt;\n1  2013     1     1      517            515         2      830            819\n2  2013     1     1      533            529         4      850            830\n3  2013     1     1      542            540         2      923            850\n4  2013     1     1      544            545        -1     1004           1022\n5  2013     1     1      554            600        -6      812            837\n6  2013     1     1      554            558        -4      740            728\n# ℹ 11 more variables: arr_delay &lt;dbl&gt;, carrier &lt;chr&gt;, flight &lt;int&gt;,\n#   tailnum &lt;chr&gt;, origin &lt;chr&gt;, dest &lt;chr&gt;, air_time &lt;dbl&gt;, distance &lt;dbl&gt;,\n#   hour &lt;dbl&gt;, minute &lt;dbl&gt;, time_hour &lt;dttm&gt;\n\nUtilsDataRSV::view_cols(flights)\n\n[1] \"year\"\n[1] 1495\n[1] \"_____________________\"\n[1] \"month\"\n[1] 11  5  8  7  4\n[1] \"_____________________\"\n[1] \"day\"\n[1] 15 12 17 11 21\n[1] \"_____________________\"\n[1] \"dep_time\"\n[1] 1713 1717  710 1809   NA\n[1] \"_____________________\"\n[1] \"sched_dep_time\"\n[1] 2009 1920 1422 1312 1647\n[1] \"_____________________\"\n[1] \"dep_delay\"\n[1] 380  84 189 120  NA\n[1] \"_____________________\"\n[1] \"arr_time\"\n[1]   14 2008 1514 1742   NA\n[1] \"_____________________\"\n[1] \"sched_arr_time\"\n[1]  934  149  805 1327 1148\n[1] \"_____________________\"\n[1] \"arr_delay\"\n[1]  14 194 267 -19  NA\n[1] \"_____________________\"\n[1] \"carrier\"\n [1] \"AS\" \"AA\" \"F9\" \"US\" \"9E\" \"EV\" \"VX\" \"OO\" \"FL\" \"B6\" \"YV\" \"DL\" \"WN\" \"UA\" \"HA\"\n[16] \"MQ\"\n[1] \"_____________________\"\n[1] \"flight\"\n[1] 1275 4423  354  482 2131\n[1] \"_____________________\"\n[1] \"tailnum\"\n [1] \"N550WN\" \"N21154\" \"N212WN\" \"N20904\" \"N719EV\" \"N68160\" \"N339NW\" \"N75435\"\n [9] \"N16541\" \"N8914A\" \"N627AW\" \"N220WN\" \"N529UA\" \"N5ELAA\" \"N5DJAA\" \"N343NW\"\n[17] \"N666DN\" \"N5CEAA\" \"N953FR\" NA      \n[1] \"4024 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"origin\"\n[1] \"LGA\" \"JFK\" \"EWR\"\n[1] \"_____________________\"\n[1] \"dest\"\n [1] \"DTW\" \"MCI\" \"HNL\" \"EYW\" \"BWI\" \"SRQ\" \"MYR\" \"CAE\" \"AUS\" \"AVL\" \"TPA\" \"CAK\"\n[13] \"RDU\" \"MSP\" \"JAC\" \"JAX\" \"TVC\" \"SJU\" \"MCO\" \"MTJ\"\n[1] \"85 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"air_time\"\n[1] 361 638  20  94  NA\n[1] \"_____________________\"\n[1] \"distance\"\n[1]  725  173 1882 1080  502\n[1] \"_____________________\"\n[1] \"hour\"\n[1] 20 13 23 18 11\n[1] \"_____________________\"\n[1] \"minute\"\n[1] 47  6 30 48 12\n[1] \"_____________________\"\n[1] \"time_hour\"\n [1] \"2013-01-30 12:00:00 EST\" \"2013-02-27 08:00:00 EST\"\n [3] \"2013-06-02 15:00:00 EDT\" \"2013-02-20 19:00:00 EST\"\n [5] \"2013-03-17 06:00:00 EDT\" \"2013-01-21 12:00:00 EST\"\n [7] \"2013-08-14 18:00:00 EDT\" \"2013-09-23 16:00:00 EDT\"\n [9] \"2013-05-30 06:00:00 EDT\" \"2013-11-30 08:00:00 EST\"\n[11] \"2013-07-28 20:00:00 EDT\" \"2013-04-19 09:00:00 EDT\"\n[13] \"2013-04-10 22:00:00 EDT\" \"2013-04-04 23:00:00 EDT\"\n[15] \"2013-08-08 12:00:00 EDT\" \"2013-01-16 10:00:00 EST\"\n[17] \"2013-09-16 13:00:00 EDT\" \"2013-08-12 11:00:00 EDT\"\n[19] \"2013-04-30 09:00:00 EDT\" \"2013-12-21 21:00:00 EST\"\n[1] \"6916 unique entries not displayed\"\n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: tailnum,\ndest, time_hour",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-2",
    "href": "Practical Four.html#question-2",
    "title": "4  Practical Four",
    "section": "4.2 Question 2",
    "text": "4.2 Question 2\n\nflight1 &lt;- flights |&gt; filter(month == 1)\n\ncarrier_vec &lt;- flight1$carrier |&gt; unique() \ncarrier_dist_vec_mean &lt;- length(carrier_vec) |&gt; numeric()\ncarrier_dist_vec_sd &lt;- length(carrier_vec) |&gt; numeric()\n\nfor (i in seq_along(carrier_vec)) {\n  carrier_dist_vec_mean[i]&lt;- flight1 |&gt; as_tibble() |&gt; filter(carrier == carrier_vec[i]) |&gt; pull(distance) |&gt;mean()\n  \n  carrier_dist_vec_sd[i]&lt;- flight1 |&gt; as_tibble() |&gt; filter(carrier == carrier_vec[i]) |&gt; pull(distance) |&gt; sd()\n}\n\ndist_tbl &lt;- tibble(\n  carrier = carrier_vec,\n  mean_distance = carrier_dist_vec_mean,\n  sd_distance = carrier_dist_vec_sd\n)\n\ndist_tbl &lt;- dist_tbl |&gt; arrange(mean_distance)\ndist_tbl\n\n# A tibble: 16 × 3\n   carrier mean_distance sd_distance\n   &lt;chr&gt;           &lt;dbl&gt;       &lt;dbl&gt;\n 1 YV               229          0  \n 2 9E               476.       334. \n 3 EV               522.       294. \n 4 US               536.       553. \n 5 MQ               566.       223. \n 6 FL               691.       142. \n 7 OO               733         NA  \n 8 WN               942.       496. \n 9 B6              1062.       681. \n10 DL              1220.       644. \n11 AA              1350.       626. \n12 UA              1462.       778. \n13 F9              1620          0  \n14 AS              2402          0  \n15 VX              2495.        98.2\n16 HA              4983          0",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-3",
    "href": "Practical Four.html#question-3",
    "title": "4  Practical Four",
    "section": "4.3 Question 3",
    "text": "4.3 Question 3\nThe standard deviation of a data set with only one value will be NA\n\ntest1 &lt;- c(5)\nsd(test1)\n\n[1] NA\n\n\nThe standard deviation of a data set with multiple elements of the same value will be zero\n\ntest2 &lt;- c(5,5,5)\nsd(test2)\n\n[1] 0",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-4",
    "href": "Practical Four.html#question-4",
    "title": "4  Practical Four",
    "section": "4.4 Question 4",
    "text": "4.4 Question 4\n\ndata &lt;- flights |&gt; select(dep_delay, carrier, month) |&gt; arrange(month)\n\ndata2 &lt;- data |&gt;\n  summarise(mean_dep_delay = mean(dep_delay, na.rm = TRUE), .by = c(month, carrier))\n\ndf &lt;- data2 |&gt; pivot_wider(\n  id_cols = (\"month\"),\n  names_from = (\"carrier\"),\n  values_from = (\"mean_dep_delay\")\n)\ndf\n\n# A tibble: 12 × 17\n   month    UA    AA    B6    DL    EV    MQ     US    WN    VX    FL     AS\n   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1     1  8.33  6.93  9.49  3.85 24.2   6.49  1.82   9.14  1.06  1.97  7.35 \n 2     2  7.71  8.28 13.8   5.54 21.5   8.09  0.980 11.8   6.61  5.18  0.722\n 3     3 11.7   8.70 14.2   9.93 26.2   7.19  2.72  15.2   9.68 17.3   8.42 \n 4     4 13.7  11.7  15.2   8.17 22.8  13.7   4.06  18.2  14.6  13.1  11.3  \n 5     5 12.3   9.66  9.78  9.74 20.2  13.9   3.18  16.9  17.8  19.2   6.77 \n 6     6 20.3  14.6  20.4  18.7  25.5  20.8  10.4   30.5  28.4  38.8  13.1  \n 7     7 20.1  12.1  24.9  20.6  26.5  20.7   9.44  24.6  35.3  41.2   2.42 \n 8     8 12.4   7.17 15.7   9.85 16.3  10.1   4.96  21.8   6.61 23.4   2.87 \n 9     9  6.89  5.69  6.63  5.53  8.24  5.35  1.96  14.2   6.99 16.9  -4.52 \n10    10  6.65  3.00  2.96  3.42 13.4   4.48  0.141 12.5   4.01 13.7   0.677\n11    11  6.37  3.10  3.52  2.85  9.83  3.28  0.576 11.0   7.80 16.9   3.08 \n12    12 17.7  11.7  17.0  10.8  27.9  12.7   4.94  24.9   6.10 26.1  18.0  \n# ℹ 5 more variables: `9E` &lt;dbl&gt;, F9 &lt;dbl&gt;, HA &lt;dbl&gt;, YV &lt;dbl&gt;, OO &lt;dbl&gt;",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-5",
    "href": "Practical Four.html#question-5",
    "title": "4  Practical Four",
    "section": "4.5 Question 5",
    "text": "4.5 Question 5\n\ntotal_flights &lt;- flights |&gt; nrow()\n\nflights_int &lt;- flights |&gt; filter(dep_delay&gt;0) |&gt; filter(arr_delay&lt;= 0)\n\nprop_flights &lt;- nrow(flights_int)/total_flights\nprop_flights\n\n[1] 0.1052391",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-6",
    "href": "Practical Four.html#question-6",
    "title": "4  Practical Four",
    "section": "4.6 Question 6",
    "text": "4.6 Question 6\n\n4.6.1 6.1\n\nmulti_al_rout &lt;- flights |&gt; group_by(origin,dest) |&gt; summarise(n_al = n_distinct(carrier), .groups = \"drop\") |&gt; filter(n_al &gt;1)\n\nmulti_al_rout\n\n# A tibble: 128 × 3\n   origin dest   n_al\n   &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;\n 1 EWR    ATL       4\n 2 EWR    AUS       2\n 3 EWR    BDL       2\n 4 EWR    BNA       2\n 5 EWR    BOS       3\n 6 EWR    BWI       2\n 7 EWR    CHS       2\n 8 EWR    CLE       2\n 9 EWR    CLT       3\n10 EWR    CVG       2\n# ℹ 118 more rows\n\n\n\n\n4.6.2 6.2\n\n avg_arr_del &lt;- flights |&gt; inner_join(multi_al_rout, by = c(\"origin\", \"dest\")) |&gt; group_by(origin,dest,carrier) |&gt; summarise(avg_arr_del=mean(arr_delay,na.rm=TRUE), .groups = \"drop\") |&gt; left_join(airlines, by = \"carrier\")\n \n avg_arr_del\n\n# A tibble: 343 × 5\n   origin dest  carrier avg_arr_del name                    \n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;                   \n 1 EWR    ATL   9E            -6.25 Endeavor Air Inc.       \n 2 EWR    ATL   DL            10.0  Delta Air Lines Inc.    \n 3 EWR    ATL   EV            19.5  ExpressJet Airlines Inc.\n 4 EWR    ATL   UA            10.5  United Air Lines Inc.   \n 5 EWR    AUS   UA             4.28 United Air Lines Inc.   \n 6 EWR    AUS   WN           -11.2  Southwest Airlines Co.  \n 7 EWR    BDL   EV             6.78 ExpressJet Airlines Inc.\n 8 EWR    BDL   UA            22.6  United Air Lines Inc.   \n 9 EWR    BNA   EV            17.7  ExpressJet Airlines Inc.\n10 EWR    BNA   WN            -2.13 Southwest Airlines Co.  \n# ℹ 333 more rows\n\n\n\n\n4.6.3 6.3\n\navg_arr_del_airlines &lt;- avg_arr_del |&gt; left_join(airlines, by = \"carrier\") \n\nroute_results &lt;- avg_arr_del_airlines |&gt; group_by(origin,dest) |&gt;\n  summarise(\n    fastest_airline = name.x[which.max(avg_arr_del)],\n    fastest_airline_del = min(avg_arr_del, na.rm = TRUE),\n    slowest_airline = name.x[which.min(avg_arr_del)],\n    slowest_airline_del = max(avg_arr_del, na.rm = TRUE),\n    .groups = \"drop\"\n  )\navg_arr_del_airlines\n\n# A tibble: 343 × 6\n   origin dest  carrier avg_arr_del name.x                   name.y             \n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;         &lt;dbl&gt; &lt;chr&gt;                    &lt;chr&gt;              \n 1 EWR    ATL   9E            -6.25 Endeavor Air Inc.        Endeavor Air Inc.  \n 2 EWR    ATL   DL            10.0  Delta Air Lines Inc.     Delta Air Lines In…\n 3 EWR    ATL   EV            19.5  ExpressJet Airlines Inc. ExpressJet Airline…\n 4 EWR    ATL   UA            10.5  United Air Lines Inc.    United Air Lines I…\n 5 EWR    AUS   UA             4.28 United Air Lines Inc.    United Air Lines I…\n 6 EWR    AUS   WN           -11.2  Southwest Airlines Co.   Southwest Airlines…\n 7 EWR    BDL   EV             6.78 ExpressJet Airlines Inc. ExpressJet Airline…\n 8 EWR    BDL   UA            22.6  United Air Lines Inc.    United Air Lines I…\n 9 EWR    BNA   EV            17.7  ExpressJet Airlines Inc. ExpressJet Airline…\n10 EWR    BNA   WN            -2.13 Southwest Airlines Co.   Southwest Airlines…\n# ℹ 333 more rows\n\n\n\n\n4.6.4 6.4\n\nroute_arr_del_diff &lt;- route_results |&gt; mutate(del_diff = fastest_airline_del - slowest_airline_del)\n\nroute_max_del_diff &lt;- route_arr_del_diff |&gt; slice_max(abs(del_diff))\n\nroute_max_del_diff\n\n# A tibble: 1 × 7\n  origin dest  fastest_airline          fastest_airline_del slowest_airline  \n  &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                                  &lt;dbl&gt; &lt;chr&gt;            \n1 JFK    ATL   ExpressJet Airlines Inc.                1.40 Endeavor Air Inc.\n# ℹ 2 more variables: slowest_airline_del &lt;dbl&gt;, del_diff &lt;dbl&gt;\n\n\n\n\n4.6.5 6.5",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  },
  {
    "objectID": "Practical Four.html#question-7",
    "href": "Practical Four.html#question-7",
    "title": "4  Practical Four",
    "section": "4.7 Question 7",
    "text": "4.7 Question 7\n\ndf7 &lt;- structure(list(id = c(\"id_1\", \"id_2\", \"id_3\", \"id_4\", \"id_5\", \n\"id_6\", \"id_7\", \"id_8\", \"id_9\", \"id_10\", \"id_11\", \"id_12\", \"id_13\", \n\"id_14\", \"id_15\", \"id_16\", \"id_17\", \"id_18\", \"id_19\", \"id_20\", \n\"id_21\", \"id_22\", \"id_23\", \"id_24\", \"id_25\", \"id_26\", \"id_27\", \n\"id_28\", \"id_29\", \"id_30\", \"id_31\", \"id_32\", \"id_33\", \"id_34\", \n\"id_35\", \"id_36\", \"id_37\", \"id_38\", \"id_39\", \"id_40\", \"id_41\", \n\"id_42\", \"id_43\", \"id_44\", \"id_45\", \"id_46\", \"id_47\", \"id_48\", \n\"id_49\", \"id_50\"), age = c(50L, 34L, 70L, 33L, 22L, 61L, 69L, \n73L, 62L, 56L, 71L, 33L, 73L, 44L, 45L, 46L, 24L, 70L, 46L, 76L, \n47L, 76L, 28L, 48L, 54L, 27L, 45L, 26L, 61L, 28L, 38L, 55L, 33L, \n36L, 62L, 58L, 72L, 31L, 34L, 51L, 61L, 64L, 26L, 28L, 60L, 29L, \n42L, 46L, 79L, 72L), gender = c(\"male\", \"male\", \"male\", \"female\", \n\"female\", \"male\", \"female\", \"male\", \"male\", \"female\", \"female\", \n\"male\", \"male\", \"female\", \"male\", \"male\", \"male\", \"male\", \"female\", \n\"male\", \"male\", \"male\", \"male\", \"female\", \"femal\", \"male\", \"female\", \n\"female\", \"female\", \"female\", \"male\", \"female\", \"female\", \"female\", \n\"male\", \"male\", \"female\", \"male\", \"female\", \"female\", \"male\", \n\"female\", \"female\", \"male\", \"male\", \"female\", \"male\", \"male\", \n\"male\", \"female\"), height = c(174.4, 197.7, 174.1, 194.5, NA, \n180.4, 170.5, 157.4, 196.8, 165.1, 153, 197.4, 186, 157.1, 177.5, \n197.7, 179.3, 170.2, 182.4, NA, 165.4, 161, 168.5, 199.2, 157.7, \n154.6, 157.1, 184.5, 181, 194.6, 183.6, 186.9, 176.1, 183, 191.1, \n189.3, 199, 172, 165.6, 170.5, 150.5, 159.2, 192.1, 161.6, 162, \n153.8, 162.3, 186.6, 192.4, 174.9), weight = c(69.4, 62.3, 55.6, \n69.5, 78.6, 60.8, 72.2, 60.9, 75.1, 67.7, 82.5, 68.7, 67.8, 76.7, \n87, 61.1, 70.6, 63.3, 81.5, 59.2, 93.2, 87.3, 83.4, 80.9, 68.6, \n76.5, 93.7, 79.1, 92, 65.6, 85.4, 63.3, 79.7, 74.1, 63.3, 78.2, \n95.7, 95.1, 63.7, 66.1, 99.3, 81, 96.9, 73.3, 70.3, 83, 57.6, \n78.6, 61.9, 98.1), blood_type = c(\"O\", \"A\", \"O\", \"O\", \"B\", \"AB\", \n\"O\", \"O\", \"O\", \"AB\", \"A\", \"O\", \"O\", \"O\", \"B\", \"A\", \"B\", \"AB\", \n\"O\", \"AB\", \"A\", \"AB\", \"O\", \"B\", \"A\", \"A\", \"B\", \"AB\", \"A\", \"B\", \n\"B\", \"A\", \"O\", \"O\", \"O\", \"B\", \"O\", \"A\", \"A\", \"B\", \"A\", \"O\", \"AB\", \n\"A\", \"A\", \"O\", \"O\", \"B\", \"A\", \"O\"), disease_status = c(\"diseased\", \n\"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"diseased\", \n\"healthy\", \"diseased\", \"Healthy\", \"diseased\", \"healthy\", \"diseased\", \n\"healthy\", \"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n\"healthy\", \"healthy\", \"diseased\", \"healthy\", \"diseased\", \"healthy\", \n\"healthy\", \"healthy\", \"healthy\", \"diseased\", \"diseased\", \"healthy\", \n\"healthy\", \"healthy\", \"diseased\", \"diseased\", \"diseased\", \"healthy\", \n\"diseased\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \"healthy\", \n\"diseased\", \"diseased\", \"diseased\", \"healthy\", \"healthy\", \"diseased\", \n\"diseased\"), cholesterol = c(228, 223, 213, 198, 166, 151, 195, \n199, 189, 196, 221, 156, 185, 230, 234, 174, 185, 236, 235, 180, \n165, 220, 160, 153, 250, 153, 184, 242, 212, 179, 224, 233, 181, \n199, 220, 214, 214, 248, 191, 162, 203, 173, 199, 187, 248, 189, \n173, 212, 164, 247), glucose = c(96, 78, 101, 119, 103, 91, 86, \nNA, 77, 80, 115, 85, 88, 109, NA, 71, 90, 94, 91, 87, 113, 93, \n97, 118, 109, 80, 85, 119, 99, 108, 89, 108, 97, 116, 79, 84, \n75, 81, 119, NA, 106, 109, 75, 82, 84, 75, 76, 120, 119, 77), \n    smoker = c(\"yes\", \"yes\", \"yes\", \"yes\", \"no\", \"yes\", \"no\", \n    \"yes\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n    \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"yes\", \"no\", \n    \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \"no\", \"yes\", \n    \"no\", \"yes\", \"no\", \"yes\", \"yes\", \"yes\", \"no\", \"no\", \"yes\", \n    \"no\", \"no\", \"no\", \"no\", \"no\", \"no\", \"yes\"), exercise = c(\"occasional\", \n    \"regular\", \"occasional\", \"regular\", \"none\", \"occasional\", \n    \"regular\", \"none\", \"occasional\", \"none\", \"occasional\", \"none\", \n    \"none\", \"regular\", \"occasional\", \"none\", \"regular\", \"regular\", \n    \"none\", \"occasional\", \"none\", \"occasional\", \"occasional\", \n    \"occasional\", \"regular\", \"occasional\", \"regular\", \"regular\", \n    \"regular\", \"occasional\", \"occasional\", \"none\", \"none\", \"regular\", \n    \"occasional\", \"occasional\", \"none\", \"none\", \"none\", \"none\", \n    \"occasional\", \"regular\", \"regular\", \"none\", \"regular\", \"occasional\", \n    \"occasional\", \"none\", \"occasional\", \"regular\"), income = c(84820L, \n    81547L, 22588L, 72490L, 74533L, 25338L, 41469L, 57315L, 63629L, \n    88662L, 62615L, 56261L, 58499L, 82232L, 77584L, 77275L, 38468L, \n    54510L, 91326L, 78611L, 31402L, 29586L, 21441L, 58269L, 84173L, \n    88295L, 37940L, 43750L, 69750L, 92356L, 82518L, 91455L, 68866L, \n    51178L, 68275L, 27689L, 35418L, 81318L, 62405L, 86851L, 25654L, \n    47553L, 74474L, 51409L, 22607L, 55360L, 96351L, 21516L, 41927L, \n    55810L), education = c(\"master\", \"bachelor\", \"PhD\", \"master\", \n    \"bachelor\", \"highschool\", \"PhD\", \"highschool\", \"PhD\", \"PhD\", \n    \"bachelor\", \"highschool\", \"master\", \"bachelor\", \"PhD\", \"PhD\", \n    \"PhD\", \"bachelor\", \"master\", \"highschool\", \"PhD\", \"highschool\", \n    \"bachelor\", \"master\", \"highschool\", \"highschool\", \"master\", \n    \"master\", \"bachelor\", \"PhD\", \"highschool\", \"PhD\", \"master\", \n    \"master\", \"master\", \"PhD\", \"highschool\", \"master\", \"master\", \n    \"highschool\", \"bachelor\", \"highschool\", \"bachelor\", \"PhD\", \n    \"bachelor\", \"highschool\", \"master\", \"highschool\", \"bachelor\", \n    \"bachelor\"), region = c(\"North\", \"South\", \"North\", \"West\", \n    \"North\", \"West\", \"South\", \"South\", \"West\", \"South\", \"West\", \n    \"South\", \"West\", \"East\", \"North\", \"West\", \"North\", \"North\", \n    \"West\", \"North\", \"East\", \"West\", \"South\", \"North\", \"North\", \n    \"East\", \"East\", \"North\", \"North\", \"West\", \"South\", \"West\", \n    \"West\", \"East\", \"West\", \"North\", \"West\", \"North\", \"East\", \n    \"North\", \"West\", \"South\", \"South\", \"East\", \"North\", \"West\", \n    \"West\", \"East\", \"North\", \"East\"), marital_status = c(\"divorced\", \n    \"single\", \"divorced\", \"divorced\", \"divorced\", \"divorced\", \n    \"divorced\", \"married\", \"divorced\", \"married\", \"divorced\", \n    \"widowed\", \"married\", \"single\", \"widowed\", \"widowed\", \"single\", \n    \"divorced\", \"widowed\", \"widowed\", \"single\", \"married\", \"single\", \n    \"married\", \"widowed\", \"married\", \"single\", \"single\", \"widowed\", \n    \"married\", \"widowed\", \"divorced\", \"single\", \"married\", \"single\", \n    \"widowed\", \"widowed\", \"married\", \"widowed\", \"divorced\", \"married\", \n    \"married\", \"divorced\", \"single\", \"married\", \"widowed\", \"divorced\", \n    \"divorced\", \"single\", \"divorced\")), row.names = c(NA, -50L\n), class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n\nUtilsDataRSV::view_cols(df7)\n\n[1] \"id\"\n [1] \"id_47\" \"id_17\" \"id_27\" \"id_23\" \"id_12\" \"id_41\" \"id_32\" \"id_31\" \"id_19\"\n[10] \"id_45\" \"id_49\" \"id_24\" \"id_39\" \"id_26\" \"id_44\" \"id_29\" \"id_40\" \"id_38\"\n[19] \"id_50\" \"id_22\"\n[1] \"30 unique entries not displayed\"\n[1] \"_____________________\"\n[1] \"age\"\n[1] 76 55 54 48 22\n[1] \"_____________________\"\n[1] \"gender\"\n[1] \"female\" \"femal\"  \"male\"  \n[1] \"_____________________\"\n[1] \"height\"\n[1] 150.5 199.0 154.6 186.0    NA\n[1] \"_____________________\"\n[1] \"weight\"\n[1] 95.1 85.4 60.9 65.6 98.1\n[1] \"_____________________\"\n[1] \"blood_type\"\n[1] \"O\"  \"B\"  \"A\"  \"AB\"\n[1] \"_____________________\"\n[1] \"disease_status\"\n[1] \"diseased\" \"Healthy\"  \"healthy\" \n[1] \"_____________________\"\n[1] \"cholesterol\"\n[1] 187 224 233 195 181\n[1] \"_____________________\"\n[1] \"glucose\"\n[1]  75 103  91  78  NA\n[1] \"_____________________\"\n[1] \"smoker\"\n[1] \"no\"  \"yes\"\n[1] \"_____________________\"\n[1] \"exercise\"\n[1] \"occasional\" \"regular\"    \"none\"      \n[1] \"_____________________\"\n[1] \"income\"\n[1] 86851 37940 55810 55360 96351\n[1] \"_____________________\"\n[1] \"education\"\n[1] \"PhD\"        \"master\"     \"bachelor\"   \"highschool\"\n[1] \"_____________________\"\n[1] \"region\"\n[1] \"North\" \"West\"  \"East\"  \"South\"\n[1] \"_____________________\"\n[1] \"marital_status\"\n[1] \"divorced\" \"single\"   \"married\"  \"widowed\" \n[1] \"_____________________\"\n\n\nWarning: Not all unique entries displayed for these non-numeric cols: id\n\n# columns with typos\n# gender and disease_status\ndf7$gender[df7$gender == \"femal\"] &lt;- \"female\"\ndf7$disease_status[df7$disease_status == \"Healthy\"]&lt;- \"healthy\"\n# columns with missing values \n# height and glucose",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Practical Four</span>"
    ]
  }
]